name: ComplianceGetReports
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Module version'
        required: true
        type: string
      technicalName:
        description: 'Module technicalName'
        required: true
        type: string

jobs:
  get-status:
    name: get status
    runs-on: ubuntu-latest
    steps:
        - name: Get OAUTH token from oauth.prestashop.com
          id: get_oauth_token
          run: |
            curl --location --request POST "${{ secrets.OAUTH_TOKEN_URI }}" \
              --cookie "${{ secrets.OAUTH_COOKIE }}" \
              --header "Content-Type: application/x-www-form-urlencoded" \
              --data-urlencode 'client_id=${{ secrets.OAUTH_CLIENT_ID }}' \
              --data-urlencode 'client_secret=${{ secrets.OAUTH_CLIENT_SECRET }}' \
              --data-urlencode 'grant_type=${{ secrets.OAUTH_GRANT_TYPE }}' \
              --data-urlencode 'audience=${{ secrets.OAUTH_AUDIENCE }}' \
              --data-urlencode 'scope=${{ secrets.OAUTH_SCOPE }}' \
              --output token.json
              echo $(cat token.json)
              echo TOKEN=$(cat token.json | jq -c .access_token) >> $GITHUB_OUTPUT
        - name: get-status
          id: get_status
          run: |
            curl --location --request GET "${{ secrets.COMPLIANCE_BASE_URI }}/orchestrator/v1/status?technicalName=${{ inputs.technicalName }}&version=${{ inputs.version }}" \
              --header "Connection: keep-alive" \
              --header 'Accept: application/json' \
              --header "Accept: */*" \
              --header "Authorization:Bearer ${{ steps.get_oauth_token.outputs.TOKEN }}" \
              --output status.json
              jq --color-output . status.json | less -R

            # Generate Matrix
            services=( $(jq -r '.servicesStatus[].service' status.json) )
            json=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${services[@]}")
            echo services="{\"services\":$json}" >> $GITHUB_OUTPUT
    outputs:
      services: ${{ steps.get_status.outputs.services }}  

  get-report:
    name: get reports
    runs-on: ubuntu-latest  
    needs:
      - get-status
    strategy:
        matrix:
            services: '${{ fromJSON(needs.get-status.outputs.services).services }}' 
    steps:
      - name: Get OAUTH token from oauth.prestashop.com
        id: get_oauth_token
        run: |
          curl --location --request POST "${{ secrets.OAUTH_TOKEN_URI }}" \
            --cookie "${{ secrets.OAUTH_COOKIE }}" \
            --header "Content-Type: application/x-www-form-urlencoded" \
            --data-urlencode 'client_id=${{ secrets.OAUTH_CLIENT_ID }}' \
            --data-urlencode 'client_secret=${{ secrets.OAUTH_CLIENT_SECRET }}' \
            --data-urlencode 'grant_type=${{ secrets.OAUTH_GRANT_TYPE }}' \
            --data-urlencode 'audience=${{ secrets.OAUTH_AUDIENCE }}' \
            --data-urlencode 'scope=${{ secrets.OAUTH_SCOPE }}' \
            --output token.json
          echo $(cat token.json)
          echo TOKEN=$(cat token.json | jq -c .access_token) >> $GITHUB_OUTPUT
      - name: get-report for ${{ matrix.services }}
        run: |
          curl --location --request GET "${{ secrets.COMPLIANCE_BASE_URI }}/$(echo ${{ matrix.services }} | sed -e "s/-api$//" )/v1/report?technicalName=${{ inputs.technicalName }}&version=${{ inputs.version }}" \
            --header "Connection: keep-alive" \
            --header 'Accept: application/json' \
            --header "Accept: */*" \
            --header "Authorization:Bearer ${{ steps.get_oauth_token.outputs.TOKEN }}" \
            --output report.json
          jq --color-output . report.json | less -R
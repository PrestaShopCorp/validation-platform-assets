name: ComplianceGetReports
on:
  pull_request:
    types: [opened, reopened]

env:
  TECHNICAL_NAME: ${{ github.event.pull_request.base.repo.name }}

jobs:
  call-api-compliance:
      name: Send module to API Compliance
      uses: ./.github/workflows/compliance-send.yml
      if: github.run_attempt == '1'
      with:
        workflow-report-id: ${{ github.run_id }}
      secrets: 
        OAUTH_TOKEN_URI: ${{ secrets.OAUTH_TOKEN_URI }}
        OAUTH_COOKIE: ${{ secrets.OAUTH_COOKIE }}
        OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
        OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
        OAUTH_GRANT_TYPE: ${{ secrets.OAUTH_GRANT_TYPE }}
        OAUTH_AUDIENCE: ${{ secrets.OAUTH_AUDIENCE }}
        OAUTH_SCOPE: ${{ secrets.OAUTH_SCOPE }}
        COMPLIANCE_BASE_URI: ${{ secrets.COMPLIANCE_BASE_URI }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
  get-status:
    name: get status
    runs-on: ubuntu-latest
    if: github.run_attempt != '1'
    steps:
        - uses: actions/checkout@v3
        - uses: actions-ecosystem/action-regex-match@v2
          id: get_version
          with:
            text: ${{ github.event.pull_request.title }}
            regex: '\d+(\.\d+)+'
        - name: Get OAUTH token from oauth.prestashop.com
          uses: ./actions/auth-compliance
          id: get_oauth_token
          with:
            token-uri: ${{ secrets.OAUTH_TOKEN_URI }}
            cookie: ${{ secrets.OAUTH_COOKIE }}
            client-id: ${{ secrets.OAUTH_CLIENT_ID }}
            client-secret: ${{ secrets.OAUTH_CLIENT_SECRET }}
            grant-type: ${{ secrets.OAUTH_GRANT_TYPE }}
            audience: ${{ secrets.OAUTH_AUDIENCE }}
            scope: ${{ secrets.OAUTH_SCOPE }}
        - name: get-status
          id: get_status
          if: ${{ steps.get_version.outputs.match != '' }}
          run: |
            curl --location --request GET "${{ secrets.COMPLIANCE_BASE_URI }}/orchestrator/v1/status?technicalName=${TECHNICAL_NAME}&version=${{ steps.get_version.outputs.match }}" \
              --header "Connection: keep-alive" \
              --header 'Accept: application/json' \
              --header "Accept: */*" \
              --oauth2-bearer ${{ steps.get_oauth_token.outputs.token }} \
              --output status.json
            jq --color-output . status.json | less -R 
            # Generate Matrix
            services=( $(jq -r '.servicesStatus[].service' status.json) )
            json=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${services[@]}")
            echo "services={\"services\":$json}" >> $GITHUB_OUTPUT
    outputs:
      services: ${{ steps.get_status.outputs.services }}  
  get-report:
    name: get reports
    runs-on: ubuntu-latest  
    needs:
      - get-status
    steps:
      - uses: actions/checkout@v3
      - uses: actions-ecosystem/action-regex-match@v2
        id: get_version
        with:
          text: ${{ github.event.pull_request.title }}
          regex: '\d+(\.\d+)+'
      - name: Get OAUTH token from oauth.prestashop.com
        uses: ./actions/auth-compliance
        id: get_oauth_token
        with:
          token-uri: ${{ secrets.OAUTH_TOKEN_URI }}
          cookie: ${{ secrets.OAUTH_COOKIE }}
          client-id: ${{ secrets.OAUTH_CLIENT_ID }}
          client-secret: ${{ secrets.OAUTH_CLIENT_SECRET }}
          grant-type: ${{ secrets.OAUTH_GRANT_TYPE }}
          audience: ${{ secrets.OAUTH_AUDIENCE }}
          scope: ${{ secrets.OAUTH_SCOPE }}
      - name: Final report in JSON
        if: ${{ steps.get_version.outputs.match != '' }}
        run: |
          curl --location --request GET "${{ secrets.COMPLIANCE_BASE_URI }}/orchestrator/v1/report?technicalName=$TECHNICAL_NAME&version=${{ steps.get_version.outputs.match }}" \
            --header 'Accept: application/json' \
            --oauth2-bearer ${{ steps.get_oauth_token.outputs.token }} \
            --output report.json
          jq --color-output . report.json | less -R 
      - name: Final report in PDF
        if: ${{ steps.get_version.outputs.match != '' }}
        run: |
          echo "http://api.compliance.prestashop.com/orchestrator/v1/report?technicalName=$TECHNICAL_NAME&version=${{ steps.get_version.outputs.match }}&type=Pdf"

name: ComplianceChecks
on: [pull_request]

jobs:
  send-to-compliance:
    name: send to compliance orchestrator
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Zip Folder
        run: zip -r module.zip .
      - name: Get OAUTH token from oauth.prestashop.com
        id: get_oauth_token
        run: |
          echo "get OAUTH Token"
          curl --location --request POST ${{ secrets.OAUTH_TOKEN_URI }} \
            --cookie ${{ secrets.OAUTH_COOKIE }} \
            --header 'Content-Type: application/x-www-form-urlencoded' \
            --data-urlencode 'client_id=${{ secrets.OAUTH_CLIENT_ID }}' \
            --data-urlencode 'client_secret=${{ secrets.OAUTH_CLIENT_SECRET }}' \
            --data-urlencode 'grant_type=client_credentials' \
            --data-urlencode 'audience=${{ secrets.OAUTH_AUDIENCE }}' \
            --data-urlencode 'scope=openid prestashop_modules.write' \
            --output token.json
            echo TOKEN=$(cat token.json | jq -c .access_token) >> $GITHUB_OUTPUT 
      - name: "Send zip to orchestrator"
        id: send_zip
        run: |
          echo ${{ steps.get_oauth_token.outputs.TOKEN }}
          echo "send zipped module to compliance orchestrator"
          curl --location --request POST https://api.compliance-preproduction.prestashop.com/orchestrator/v1/scan \
            --header "Accept: application/zip" \
            --header "Content-Type: multipart/form-data" \
            --oauth2-bearer ${{ steps.get_oauth_token.outputs.TOKEN }} \
            --form 'module=@module.zip' \
            --output send.json
          echo $(cat send.json)
          echo QUERY_PARAMS=$(cat send.json | jq -c .message) >> $GITHUB_OUTPUT
          echo "zip sended to compliance orchestrator"
    outputs:
      token: '${{ steps.get_oauth_token.outputs.TOKEN }}'
      query-params: '${{ steps.send_zip.outputs.QUERY_PARAMS }}'
      
  # get-report:
  #   needs: 
  #     - send-to-compliance
  #   strategy:
  #     matrix:
  #       services: ['ps-compatibility', 'ps-module-compatibility']
  #   name: get reports for each services
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: "Get ${{ matrix.services }} report"
  #       run: |
  #         echo "Get ${{ matrix.services }} report"
  #         curl --location --request GET https://api.compliance-preproduction.prestashop.com/${{ matrix.services }}/v1/report?${{ needs.send-to-compliance.outputs.query-params }} \
  #           --header 'Authorization: Bearer ${{ needs.send-to-compliance.outputs.token }}' \
  #           --output report.json
  #         echo $(cat report.json)

